sudo: required

services:
  - docker

branches:
  only:
  - master

git:
  submodules:
    false

before_install:
  - sh ./.travis/before_install.sh

install:
  - sh ./.travis/install.sh

# script:
#   - bash ./unittest.sh --build --verbose --cleanup

jobs:
 include:
   - stage: test
     name: "Base Minimal"
     script: bash ./unittest.sh --build debian-stretch-minimal --verbose --cleanup
   - stage: test
     name: "Makepasswd"
     script: bash ./unittest.sh --build debian-stretch-makepasswd --verbose --cleanup
   - stage: test
     name: "OpenSSH"
     script: bash ./unittest.sh --build debian-stretch-openssh --verbose --cleanup
   - stage: test
     name: "NodeJS"
     script: bash ./unittest.sh --build debian-stretch-nodevnc --tag=latest --verbose --cleanup
   - stage: test
     name: "Python 3.5.6"
     script: bash ./unittest.sh --build debian-stretch-python --tag=3.5.6 --verbose --cleanup --args="version=3.5.6 keyserver=eu.pool.sks-keyservers.net"
   - stage: test
     name: "Python 3.6.8"
     script: bash ./unittest.sh --build debian-stretch-python --tag=3.6.8 --verbose --cleanup --args="version=3.6.8 keyserver=eu.pool.sks-keyservers.net"
   - stage: test
     name: "Python 3.7.2"
     script: bash ./unittest.sh --build debian-stretch-python --tag=3.7.2 --verbose --cleanup --args="version=3.7.2 keyserver=eu.pool.sks-keyservers.net"


# only execute the following instructions in
# the case of a success (failing at this point
# won't mark the build as a failure).
# To have `DOCKER_USERNAME` and `DOCKER_PASSWORD`
# filled you need to either use `travis`' cli
# and then `travis set ..` or go to the travis
# page of your repository and then change the
# environment in the settings pannel.
#after_success:
#  - if [[ "$TRAVIS_BRANCH" == "master" ]]; then
#      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD ;
#      make push-image ;
#    fi

# don't notify me when things fail
notifications:
  email: false
